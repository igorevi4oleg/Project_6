{"name": "test_order_flow[\\u0418\\u0432\\u0430\\u043d-\\u0418\\u0432\\u0430\\u043d\\u043e\\u0432-\\u041c\\u043e\\u0441\\u043a\\u0432\\u0430, \\u0443\\u043b\\u0438\\u0446\\u0430 \\u041b\\u0435\\u043d\\u0438\\u043d\\u0430, \\u0434. 1-1234567890]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"8556aac4-573d-4823-9266-37a9e98c54b8\")>, main_page = <page_objects.main_page.MainPage object at 0x0000011070479450>\norder_page = <page_objects.order_page.OrderPage object at 0x00000110703B6CF0>, name = 'Иван', surname = 'Иванов', address = 'Москва, улица Ленина, д. 1', phone = '1234567890'\n\n    @pytest.mark.parametrize(\"name, surname, address, phone\", [\n        (\"Иван\", \"Иванов\", \"Москва, улица Ленина, д. 1\", \"1234567890\"),\n        (\"Петр\", \"Петров\", \"Москва, улица Пушкина, д. 2\", \"9876543210\")\n    ])\n    def test_order_flow(driver, main_page, order_page, name, surname, address, phone):\n        # Кликаем по кнопке \"Заказать\" (для верхней кнопки)\n        main_page.click_order_button(position='top')\n    \n        # Заполняем форму заказа\n>       order_page.fill_order_form(name, surname, address, phone)\n\ntests\\test_order.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\order_page.py:12: in fill_order_form\n    name_field = self.wait.until(EC.presence_of_element_located((By.NAME, \"name\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8556aac4-573d-4823-9266-37a9e98c54b8\")>, method = <function presence_of_element_located.<locals>._predicate at 0x000001107043E7A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "parameters": [{"name": "name", "value": "'Иван'"}, {"name": "surname", "value": "'Иванов'"}, {"name": "address", "value": "'Москва, улица Ленина, д. 1'"}, {"name": "phone", "value": "'1234567890'"}], "start": 1732899616941, "stop": 1732899622311, "uuid": "aa11244a-d52e-4404-be9a-3ca83fb6cf48", "historyId": "1b84427dd7ef3ab078dcae1f391992d3", "testCaseId": "9df31a62ef560a0c9f3608aea222d388", "fullName": "tests.test_order#test_order_flow", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "host", "value": "DESKTOP-CDD6FLQ"}, {"name": "thread", "value": "17020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}